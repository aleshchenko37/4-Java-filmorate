DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS rating CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;
DROP TABLE IF EXISTS film_rating CASCADE;
DROP TABLE IF EXISTS film CASCADE;
DROP TABLE IF EXISTS user_friend CASCADE;
DROP TABLE IF EXISTS film_user CASCADE;
DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE IF NOT EXISTS genre
(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     varchar(40) NOT NULL UNIQUE,
    CONSTRAINT check_if_blank CHECK (name <> '')
);

CREATE TABLE IF NOT EXISTS rating
(
    rating_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        varchar(40) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film
(
    film_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar(40) NOT NULL UNIQUE,
    description  varchar(200) DEFAULT 'Нет описания',
    release_date date         NOT NULL,
    duration     integer          NOT NULL,
    rate    integer
);

CREATE TABLE IF NOT EXISTS film_rating
(
    film_id  integer REFERENCES film (film_id) ON DELETE CASCADE PRIMARY KEY,
    rating_id integer REFERENCES rating (rating_id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  integer REFERENCES film (film_id) ON DELETE CASCADE,
    genre_id integer REFERENCES genre (genre_id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS users
(
    user_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar(40) NOT NULL UNIQUE,
    login    varchar(40) NOT NULL UNIQUE,
    name     varchar(40),
    birthday date
);

CREATE TABLE IF NOT EXISTS user_friend
(
    user_id integer REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id integer REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS film_user
(
    film_id integer REFERENCES film (film_id) ON DELETE CASCADE,
    user_id integer REFERENCES users (user_id) ON DELETE CASCADE
);